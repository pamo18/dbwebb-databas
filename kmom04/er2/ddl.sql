-- MySQL Script generated by MySQL Workbench
-- Wed Feb 13 18:06:02 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Table `eshop`.`kategori`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `eshop`.`kategori` ;

CREATE TABLE IF NOT EXISTS `eshop`.`kategori` (
  `typ` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`typ`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `eshop`.`produkt`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `eshop`.`produkt` ;

CREATE TABLE IF NOT EXISTS `eshop`.`produkt` (
  `id` INT NOT NULL,
  `namn` VARCHAR(45) NOT NULL,
  `text` VARCHAR(45) NULL,
  `pris` DECIMAL(18,2) NOT NULL,
  `kategory_typ` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `kategory_typ_idx` (`kategory_typ` ASC) VISIBLE,
  CONSTRAINT `kategory_typ`
    FOREIGN KEY (`kategory_typ`)
    REFERENCES `eshop`.`kategori` (`typ`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `eshop`.`kund`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `eshop`.`kund` ;

CREATE TABLE IF NOT EXISTS `eshop`.`kund` (
  `id` INT NOT NULL,
  `namn` VARCHAR(45) NOT NULL,
  `address` VARCHAR(45) NOT NULL,
  `telefon` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `eshop`.`order`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `eshop`.`order` ;

CREATE TABLE IF NOT EXISTS `eshop`.`order` (
  `id` INT NOT NULL,
  `kund_id` INT NOT NULL,
  `produkt_id` INT NOT NULL,
  `antal` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `kund_id_idx` (`kund_id` ASC) VISIBLE,
  INDEX `produkt_id_idx` (`produkt_id` ASC) VISIBLE,
  CONSTRAINT `kund_id_order`
    FOREIGN KEY (`kund_id`)
    REFERENCES `eshop`.`kund` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `produkt_id_order`
    FOREIGN KEY (`produkt_id`)
    REFERENCES `eshop`.`produkt` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `eshop`.`lager`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `eshop`.`lager` ;

CREATE TABLE IF NOT EXISTS `eshop`.`lager` (
  `id` INT NOT NULL,
  `saldo` INT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `eshop`.`plocklista`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `eshop`.`plocklista` ;

CREATE TABLE IF NOT EXISTS `eshop`.`plocklista` (
  `id` INT NOT NULL,
  `order_id` INT NOT NULL,
  `hylla_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `order_id_idx` (`order_id` ASC) VISIBLE,
  INDEX `hylla_id_idx` (`hylla_id` ASC) VISIBLE,
  CONSTRAINT `order_id_pl`
    FOREIGN KEY (`order_id`)
    REFERENCES `eshop`.`order` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `hylla_id_pl`
    FOREIGN KEY (`hylla_id`)
    REFERENCES `eshop`.`lager` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `eshop`.`leverans`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `eshop`.`leverans` ;

CREATE TABLE IF NOT EXISTS `eshop`.`leverans` (
  `id` INT NOT NULL,
  `order_id` INT NOT NULL,
  `total` DECIMAL(18,2) NOT NULL,
  `pris` DECIMAL(18,2) NOT NULL,
  `faktura` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  INDEX `order_id_idx` (`order_id` ASC) VISIBLE,
  CONSTRAINT `order_id_lv`
    FOREIGN KEY (`order_id`)
    REFERENCES `eshop`.`order` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `eshop`.`logg`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `eshop`.`logg` ;

CREATE TABLE IF NOT EXISTS `eshop`.`logg` (
  `id` INT NOT NULL,
  `order_id` INT NOT NULL,
  `add` INT NULL,
  `remove` INT NULL,
  `edit` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `order_id_idx` (`order_id` ASC) VISIBLE,
  CONSTRAINT `order_id_log`
    FOREIGN KEY (`order_id`)
    REFERENCES `eshop`.`order` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `eshop`.`ProduktKund`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `eshop`.`ProduktKund` ;

CREATE TABLE IF NOT EXISTS `eshop`.`ProduktKund` (
  `produkt_id` INT NOT NULL,
  `kund_id` INT NOT NULL,
  INDEX `produkt_id_idx` (`produkt_id` ASC) VISIBLE,
  INDEX `kund_id_idx` (`kund_id` ASC) VISIBLE,
  CONSTRAINT `produkt_id_pk`
    FOREIGN KEY (`produkt_id`)
    REFERENCES `eshop`.`produkt` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `kund_id_pk`
    FOREIGN KEY (`kund_id`)
    REFERENCES `eshop`.`kund` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `eshop`.`OrderProdukt`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `eshop`.`OrderProdukt` ;

CREATE TABLE IF NOT EXISTS `eshop`.`OrderProdukt` (
  `produkt_id` INT NOT NULL,
  `order_id` INT NOT NULL,
  INDEX `produkt_id_idx` (`produkt_id` ASC) VISIBLE,
  INDEX `order_id_idx` (`order_id` ASC) VISIBLE,
  CONSTRAINT `produkt_id_op`
    FOREIGN KEY (`produkt_id`)
    REFERENCES `eshop`.`produkt` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `order_id_op`
    FOREIGN KEY (`order_id`)
    REFERENCES `eshop`.`order` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
